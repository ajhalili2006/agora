{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/docs/howto","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"how-to-use-this-agora\"\n  }, \"How to use this Agora\"), mdx(\"h2\", {\n    \"id\": \"to-browse-it\"\n  }, \"To browse it\"), mdx(\"p\", null, \"The simplest way to read this Agora is to browse it online in \", mdx(\"a\", {\n    \"href\": \"https://flancia.org/go/agora-rendered\",\n    \"parentName\": \"p\"\n  }, \"https://flancia.org/go/agora-rendered\"), \".\"), mdx(\"h2\", {\n    \"id\": \"to-contribute-to-it\"\n  }, \"To contribute to it\"), mdx(\"p\", null, \"The Agora is by design a distributed system. The easiest way to contribute is to start taking public notes (that is, growing a digital garden), and then to ask to be included in the digital gardens repository.\"), mdx(\"p\", null, \"The Agora currently targets Foam as its main editor: \", mdx(\"a\", {\n    \"href\": \"https://flancia.org/go/foam\",\n    \"parentName\": \"p\"\n  }, \"https://flancia.org/go/foam\"), \". The next section details how to get Foam running for the purpose of setting up a digital garden / note taking system compatible with the Agora. If you're already using other note taking tools, like Obsidian or Roam, please scroll down.\"), mdx(\"h3\", {\n    \"id\": \"foam\"\n  }, \"Foam\"), mdx(\"h3\", {\n    \"id\": \"obsidian\"\n  }, \"Obsidian\"), mdx(\"h3\", {\n    \"id\": \"roam\"\n  }, \"Roam\"), mdx(\"p\", null, \"Roam is currently not supported as an Agora editor.\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/docs/howto","title":"How to use this Agora"}}},"pageContext":{"id":"a92a2ad1-1f47-5773-9939-9077e5af9a92"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}