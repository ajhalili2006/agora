{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/renderer/README","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar layoutProps = {};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"to-develop\"\n  }, \"To develop\"), mdx(\"p\", null, \"Install OS dependencies:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"$ apt-get install python3 python3-venv python3-pip\\n\")), mdx(\"p\", null, \"Then Flask inside a virtual environment in this directory:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"python3 -m venv venv\\n. venv/bin/activate\\npip install Flask\\n\")), mdx(\"p\", null, \"Then run the development server:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"./run.sh\\n\")), mdx(\"h2\", {\n    \"id\": \"optional-my-git-configuration\"\n  }, \"Optional: my git configuration\"), mdx(\"p\", null, \"(Tangent) in case this is your first git contribution/you just haven't done it and you find this useful. This is my git config:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"git config --global user.email \\\"0@flancia.org\\\"\\ngit config --global user.name \\\"Flancian\\\"\\ngit config --global alias.st status\\ngit config --global alias.ci commit\\ngit config --global alias.co checkout\\ngit config --global alias.f \\\"reset --hard HEAD\\\"\\n``\\n\\n\\nexport const _frontmatter = {}\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[]},"fields":{"slug":"/renderer/README","title":"To develop"}}},"pageContext":{"id":"383bb7e2-5049-5770-bc2a-870e986a36b0"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}