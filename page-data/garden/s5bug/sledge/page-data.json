{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/s5bug/sledge","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"sledge\"\n  }, \"sledge\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Work-in-progress programming language.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Meant to look like [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"fs2\",\n    \"title\": \"fs2\"\n  }), \"fs2\"), \"]-based programs, but with a [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zig\",\n    \"title\": \"Zig\"\n  }), \"Zig\"), \"]-like paradigm.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Completely disallows mutability in the source code to allow for better\\noptimizations, and to allow for returning variably-sized objects like\\nbuffers or closures on the stack instead of the heap.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Meant to compile to native code like [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zig\",\n    \"title\": \"Zig\"\n  }), \"Zig\"), \"] and have manual memory\\nmanagement like [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"zig\",\n    \"title\": \"Zig\"\n  }), \"Zig\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Meant to have typeclasses like [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"scala\",\n    \"title\": \"Scala\"\n  }), \"Scala\"), \"] and operator overloading like\\n[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"scala\",\n    \"title\": \"Scala\"\n  }), \"Scala\"), \"].\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"fs2\"\n  }, \"fs2\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://fs2.io\"\n  }), \"https://fs2.io\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"scala\",\n    \"title\": \"Scala\"\n  }), \"Scala\"), \"] library that allows abstracting data transmission and control\\ninto a shared concept called a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Stream\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"a2740de6-e43c-541b-9913-863a2a8a7af4","fields":{"slug":"/garden/s5bug/fs2","title":"fs2"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"zig\"\n  }, \"Zig\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://ziglang.org/\"\n  }), \"https://ziglang.org/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"programming-language\",\n    \"title\": \"Programming Language\"\n  }), \"programming language\"), \"].\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"67c40aea-f6f5-53c1-a089-c65f1048b46b","fields":{"slug":"/garden/s5bug/zig","title":"Zig"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"scala\"\n  }, \"Scala\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://scala-lang.org/\"\n  }), \"https://scala-lang.org/\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"programming-language\",\n    \"title\": \"Programming Language\"\n  }), \"programming language\"), \"] that mainly runs on the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"java-virtual-machine\",\n    \"title\": \"Java Virtual Machine\"\n  }), \"Java Virtual Machine\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Scala can be compiled to JavaScript or via LLVM as well.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"05c5dc14-ad88-5301-bc39-f957e85396bb","fields":{"slug":"/garden/s5bug/scala","title":"Scala"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2020-10-31\"\n  }, \"2020-10-31\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Set up this journal. See the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5CREADME\",\n    \"title\": \"Aly's digital garden\"\n  }), \"readme\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Looked into writing a [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cghidra\",\n    \"title\": \"Ghidra\"\n  }), \"Ghidra\"), \"] plugin to generate [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cmasm-assembly\",\n    \"title\": \"MASM Assembly\"\n  }), \"MASM Assembly\"), \"] for a\\n[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdecompilation\",\n    \"title\": \"Decompilation\"\n  }), \"decompilation\"), \"] project. It seems the process is complicated, by the \\\"Hello\\nWorld\\\" example given.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explored whether or not it's possible to write recursive algorithms in\\nconstant space using [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cfs2\",\n    \"title\": \"fs2\"\n  }), \"fs2\"), \"], and how it applies to [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csledge\",\n    \"title\": \"sledge\"\n  }), \"sledge\"), \"].\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It was discussed in the Scala Discord whether or not there exists an\\nalgorithm to generate moves for the Dragon Fractal in constant space. The\\ncurrent theory is that there can't be an algorithm that uses less than\\nlinear space.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Talked with my family about my plans for university. I've decided that if I'm\\nunable to complete an Associate's Degree by the end of Summer 2021, then I'll\\nreduce my workload and enter university in Fall 2022 instead of Fall 2021.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussed how safe and unsafe [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Czig\",\n    \"title\": \"Zig\"\n  }), \"Zig\"), \"] is with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cminuskelvin\",\n    \"title\": \"MinusKelvin\"\n  }), \"MinusKelvin\"), \"]. The conclusion\\nwas that [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Czig\",\n    \"title\": \"Zig\"\n  }), \"Zig\"), \"]'s level of safety is perfect for a replacement for C, but\\n[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Crust\",\n    \"title\": \"Rust\"\n  }), \"Rust\"), \"] gives better overall safety.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explored the practicality of a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Real\"), \"/Computable number type for use in place\\nof [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Czig\",\n    \"title\": \"Zig\"\n  }), \"Zig\"), \"]'s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"comptime_float\"), \". The consensus was that, if accurate, it would\\nbe very useful for expanding [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Czig\",\n    \"title\": \"Zig\"\n  }), \"Zig\"), \"]'s floating point datatypes outside of\\njust \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f16\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f32\"), \", \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f64\"), \", and \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"f128\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discovered [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cminecraft-but-its-everywhere-at-the-end-of-time\",\n    \"title\": \"Minecraft, but it's Everywhere At The End Of Time\"\n  }), \"Minecraft, but it's Everywhere At The End Of Time\"), \"]. I've\\nfigured out that this is some sort of reference to \\\"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cthe-caretaker\",\n    \"title\": \"The Caretaker\"\n  }), \"The Caretaker\"), \"],\\\" but I\\ndon't know what \\\"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cthe-caretaker\",\n    \"title\": \"The Caretaker\"\n  }), \"The Caretaker\"), \"]\\\" is. I'll have to do more research on it\\ntomorrow.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"9904cd87-4b56-516e-8a34-1a3aeeb0ff77","fields":{"slug":"/garden/s5bug/journal/2020-10-31","title":"2020-10-31"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2020-11-01\"\n  }, \"2020-11-01\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finished listening to [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cminecraft-but-its-everywhere-at-the-end-of-time\",\n    \"title\": \"Minecraft, but it's Everywhere At The End Of Time\"\n  }), \"Minecraft, but it's Everywhere At The End Of Time\"), \"].\\nIt's made me worry about the effects of dementia and Alzheimer's, whether I\\ncould contract them, and how much of an effect they would have on me. I'm\\nworried about not remembering having created this garden.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implemented \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"get\"), \" and partially implemented \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"put\"), \" on a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HashTableChain\"), \". A\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HashTableChain\"), \" is made up of an array of linked lists, where the array\\nindex corresponds to some modulo of the hashcode of the key.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Played \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Bed-Wars\",\n    \"title\": \"Bed Wars\"\n  }), \"[[Bed Wars]]\"), \" on [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Chypixel\",\n    \"title\": \"Hypixel\"\n  }), \"Hypixel\"), \"] in [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cminecraft\",\n    \"title\": \"Minecraft\"\n  }), \"Minecraft\"), \"] with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Caveao\",\n    \"title\": \"Aveao\"\n  }), \"aveao\"), \"],\\n[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Clinuxgemini\",\n    \"title\": \"Linuxgemini\"\n  }), \"linuxgemini\"), \"], and [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Clnmds\",\n    \"title\": \"Lnmds\"\n  }), \"lnmds\"), \"]. We won with little to no communication;\\namazing team synergy. We plan to play again at some point but with voice\\nchat or some other form of unobtrusive communication.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ran out of milk and Half and Half. Tried to make Mac and Cheese with watered\\ndown whipping cream. Tasted awful.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thinking about registering \\\"degreetech\\\" or \\\"\\xB0tech\\\" as some sort of trademark.\\nI don't know the official word for it, but I want to publish [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csledge\",\n    \"title\": \"sledge\"\n  }), \"sledge\"), \"] under\\n[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdegreetech\",\n    \"title\": \"degreetech\"\n  }), \"degreetech\"), \"] instead of as a personal project. It might be easier to get\\nfunding or members that way.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdegreetech\",\n    \"title\": \"degreetech\"\n  }), \"degreetech\"), \"]'s original purpose was to develop software and tooling meant to\\nbe international. Tooling in a very general sense: I've wanted to create a\\nconlang that removes the distinction between morphemes and phonemes and\\npublish it under [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdegreetech\",\n    \"title\": \"degreetech\"\n  }), \"degreetech\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The only project under [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdegreetech\",\n    \"title\": \"degreetech\"\n  }), \"degreetech\"), \"] as of current is an abandoned chat\\nprotocol. Said protocol was meant to fix the problems of Matrix and XMPP\\nbut ended up having some pretty significant flaws so it's been left to\\ncollect dust. I still think that there's a space for federated chat left\\nto be filled.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Partially finished my \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HashTableChain\"), \". I had a bug where every bucket in the\\ntable was pointing to the same chain, so when I added an element it added it\\nto every bucket. This is because [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cjava\",\n    \"title\": \"Java\"\n  }), \"Java\"), \"]'s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Arrays.fill\"), \" only evaluates the\\nelement once.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Played [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cbedwars\",\n    \"title\": \"Bedwars\"\n  }), \"Bedwars\"), \"] again, but with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csamseawell\",\n    \"title\": \"SamSeawell\"\n  }), \"SamSeawell\"), \"] and [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csirius902\",\n    \"title\": \"Sirius902\"\n  }), \"Sirius902\"), \"]. We had\\nvoice chat at our advantage. We did not lose a single game out of the few we\\nplayed.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"ed181660-b592-5ecf-af47-04cb721e4b9e","fields":{"slug":"/garden/s5bug/journal/2020-11-01","title":"2020-11-01"}}}]},"fields":{"slug":"/garden/s5bug/sledge","title":"sledge"}}},"pageContext":{"id":"21150330-1632-58e1-91db-be371efd501d"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}