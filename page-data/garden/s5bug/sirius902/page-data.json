{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/s5bug/sirius902","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"sirius902\"\n  }, \"Sirius902\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"person\",\n    \"title\": \"Person\"\n  }), \"person\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Goes by \\\"Christian\\\".\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"person\"\n  }, \"Person\"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d0444d2d-6ac8-5fd8-8203-d7d1f52bed26","fields":{"slug":"/garden/s5bug/person","title":"Person"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2020-11-02\"\n  }, \"2020-11-02\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chatted with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cjesyspa\",\n    \"title\": \"Jesyspa\"\n  }), \"jesyspa\"), \"] about a field-independent way to define division\\nsuch that division by zero is ill-typed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wrote a program that takes a list of Google Cloud Bucket URLs and runs them\\nthrough speech recognition. The goal is to get class lectures out of a\\nchronological form so they can be used directly as notes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Took the second exam for my Political Science class. Abused my transcribing\\nprogram. Didn't cheat by using any internet resources during the exam. I had\\nto admit on some of my free responses that I missed some of the reading\\nassignments, but I think prior knowledge helped me out a lot.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Played [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Chypixel\",\n    \"title\": \"Hypixel\"\n  }), \"Hypixel\"), \"] again with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csamseawell\",\n    \"title\": \"SamSeawell\"\n  }), \"SamSeawell\"), \"] and [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csirius902\",\n    \"title\": \"Sirius902\"\n  }), \"Sirius902\"), \"] against my\\nbetter judgement.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"338976bd-a9b5-5b2e-a9c4-5899cbd1dd28","fields":{"slug":"/garden/s5bug/journal/2020-11-02","title":"2020-11-02"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2020-11-01\"\n  }, \"2020-11-01\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finished listening to [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cminecraft-but-its-everywhere-at-the-end-of-time\",\n    \"title\": \"Minecraft, but it's Everywhere At The End Of Time\"\n  }), \"Minecraft, but it's Everywhere At The End Of Time\"), \"].\\nIt's made me worry about the effects of dementia and Alzheimer's, whether I\\ncould contract them, and how much of an effect they would have on me. I'm\\nworried about not remembering having created this garden.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implemented \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"get\"), \" and partially implemented \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"put\"), \" on a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HashTableChain\"), \". A\\n\", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HashTableChain\"), \" is made up of an array of linked lists, where the array\\nindex corresponds to some modulo of the hashcode of the key.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Played \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/Bed-Wars\",\n    \"title\": \"Bed Wars\"\n  }), \"[[Bed Wars]]\"), \" on [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Chypixel\",\n    \"title\": \"Hypixel\"\n  }), \"Hypixel\"), \"] in [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cminecraft\",\n    \"title\": \"Minecraft\"\n  }), \"Minecraft\"), \"] with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Caveao\",\n    \"title\": \"Aveao\"\n  }), \"aveao\"), \"],\\n[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Clinuxgemini\",\n    \"title\": \"Linuxgemini\"\n  }), \"linuxgemini\"), \"], and [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Clnmds\",\n    \"title\": \"Lnmds\"\n  }), \"lnmds\"), \"]. We won with little to no communication;\\namazing team synergy. We plan to play again at some point but with voice\\nchat or some other form of unobtrusive communication.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ran out of milk and Half and Half. Tried to make Mac and Cheese with watered\\ndown whipping cream. Tasted awful.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Thinking about registering \\\"degreetech\\\" or \\\"\\xB0tech\\\" as some sort of trademark.\\nI don't know the official word for it, but I want to publish [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csledge\",\n    \"title\": \"sledge\"\n  }), \"sledge\"), \"] under\\n[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdegreetech\",\n    \"title\": \"degreetech\"\n  }), \"degreetech\"), \"] instead of as a personal project. It might be easier to get\\nfunding or members that way.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdegreetech\",\n    \"title\": \"degreetech\"\n  }), \"degreetech\"), \"]'s original purpose was to develop software and tooling meant to\\nbe international. Tooling in a very general sense: I've wanted to create a\\nconlang that removes the distinction between morphemes and phonemes and\\npublish it under [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdegreetech\",\n    \"title\": \"degreetech\"\n  }), \"degreetech\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The only project under [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cdegreetech\",\n    \"title\": \"degreetech\"\n  }), \"degreetech\"), \"] as of current is an abandoned chat\\nprotocol. Said protocol was meant to fix the problems of Matrix and XMPP\\nbut ended up having some pretty significant flaws so it's been left to\\ncollect dust. I still think that there's a space for federated chat left\\nto be filled.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Partially finished my \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"HashTableChain\"), \". I had a bug where every bucket in the\\ntable was pointing to the same chain, so when I added an element it added it\\nto every bucket. This is because [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cjava\",\n    \"title\": \"Java\"\n  }), \"Java\"), \"]'s \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Arrays.fill\"), \" only evaluates the\\nelement once.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Played [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cbedwars\",\n    \"title\": \"Bedwars\"\n  }), \"Bedwars\"), \"] again, but with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csamseawell\",\n    \"title\": \"SamSeawell\"\n  }), \"SamSeawell\"), \"] and [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csirius902\",\n    \"title\": \"Sirius902\"\n  }), \"Sirius902\"), \"]. We had\\nvoice chat at our advantage. We did not lose a single game out of the few we\\nplayed.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"ed181660-b592-5ecf-af47-04cb721e4b9e","fields":{"slug":"/garden/s5bug/journal/2020-11-01","title":"2020-11-01"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2020-11-04\"\n  }, \"2020-11-04\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Worked with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cflancian\",\n    \"title\": \"Flancian\"\n  }), \"Flancian\"), \"] to squash some bugs in their Agora renderer and in\\nmy garden.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Looked into human-readable duration parsing for [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Cjava\",\n    \"title\": \"Java\"\n  }), \"Java\"), \"] and was recommended\\nNaTTY.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Looked into reverse-engineering the protocol used by the ASCII GameCube\\ncontroller, meant for Phantasy Star Online.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discussed with [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"..%5Csirius902\",\n    \"title\": \"Sirius902\"\n  }), \"Sirius902\"), \"] on how feasible it is to get the ASCII\\nGameCube controller working as a normal PC keyboard.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"e308de62-8e08-5b6e-b7dc-4888453aeef7","fields":{"slug":"/garden/s5bug/journal/2020-11-04","title":"2020-11-04"}}}]},"fields":{"slug":"/garden/s5bug/sirius902","title":"Sirius902"}}},"pageContext":{"id":"26345038-fbad-5f27-b734-3004bff774e9"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}