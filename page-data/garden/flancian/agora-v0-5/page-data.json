{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/flancian/agora-v0-5","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"agora-v05\"\n  }, \"Agora V0.5\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"The v0.5 is:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Foam/Obsidian based notes forming a personal digital garden.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Hosted in a public or private repository, by default git.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Federated/interlinked using a conventional scheme, plus a set of ancillary tools (scripts).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Integrated with go links/URL redirectors.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"See also: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://twitter.com/flancian/status/1315312902090391553\"\n  }), \"https://twitter.com/flancian/status/1315312902090391553\"), \" \")), mdx(\"h2\", {\n    \"id\": \"plan\"\n  }, \"Plan\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Craft 'agora' repo (base repo):\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"places/\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"gardens/\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"flancian -> flancian.github.com/garden\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"stoas/\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"flancian -> flancian.github.com/stoa\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"done but changed my mind on the structure: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/places\",\n    \"title\": \"places\"\n  }), \"[[places]]\"), \" are top level items. \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/users\",\n    \"title\": \"users\"\n  }), \"[[users]]\"), \" contribute \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/fragments\",\n    \"title\": \"fragments\"\n  }), \"[[fragments]]\"), \".\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"users/\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"CONTRACT.md\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Foam\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Explore how to implement [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"context\",\n    \"title\": \"Context\"\n  }), \"context\"), \"].\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"context\",\n    \"title\": \"Context\"\n  }), \"context\"), \"] is a set of notes that are considered as relevant at any given moment (they are shown one after the other if there is more than one match for a query, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"context\",\n    \"title\": \"Context\"\n  }), \"context\"), \"] is defined with an algebra that operates over Agora entities.\"))))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Settle open questions\", mdx(\"ul\", _extends({\n    parentName: \"li\"\n  }, {\n    \"className\": \"contains-task-list\"\n  }), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"What does '->' mean as used above?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"git submodule?\"), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"git subtree?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Trying this first.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"something else?\"))), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": true,\n    \"disabled\": true\n  })), \" \", \"Create 'Agora' Twitter account.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/an_agora\",\n    \"title\": \"an_agora\"\n  }), \"[[an_agora]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"context\"\n  }, \"Context\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Idea for a Chrome Extension.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://twitter.com/flancian/status/1232226838111498240\"\n  }), \"https://twitter.com/flancian/status/1232226838111498240\"))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"fc99008a-fd08-53c4-b354-5cfe0e849ceb","fields":{"slug":"/garden/flancian/context","title":"Context"}}}],"inboundReferences":[]},"fields":{"slug":"/garden/flancian/agora-v0-5","title":"Agora V0.5"}}},"pageContext":{"id":"959aa308-3a32-58de-b977-433a35d23468"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}