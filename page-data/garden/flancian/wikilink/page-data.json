{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/flancian/wikilink","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wikilink\"\n  }, \"Wikilink\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A wikilink looks like this: [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"wikilink\",\n    \"title\": \"Wikilink\"\n  }), \"wikilink\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks are the heart of the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"agora\",\n    \"title\": \"Agora\"\n  }), \"Agora\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks come, wait for it, from wikis :) You can think of the Agora as a sort of distributed wiki, although users in this wiki contribute individual contributions instead of community pages (for now). \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks are great because they allow for very easy linking: you just [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"link-it-as-you-go-along\",\n    \"title\": \"Link It as You Go Along\"\n  }), \"link it as you go along\"), \"], then the link either works (because someone wrote that node/article/resource already) or you can click through and backfill it. I call this procedure link-driven writing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Whenever there is more than one \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/node\",\n    \"title\": \"node\"\n  }), \"[[node]]\"), \" with a given wikilink in an Agora (typical use case: notes kept on a certain topic by different users), the Agora will surface all of them when resolving the wikilink in question. Example: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/README\",\n    \"title\": \"README\"\n  }), \"[[README]]\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wikilink\"\n  }, \"Wikilink\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A wikilink looks like this: [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"wikilink\",\n    \"title\": \"Wikilink\"\n  }), \"wikilink\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks are the heart of the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"agora\",\n    \"title\": \"Agora\"\n  }), \"Agora\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks come, wait for it, from wikis :) You can think of the Agora as a sort of distributed wiki, although users in this wiki contribute individual contributions instead of community pages (for now). \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks are great because they allow for very easy linking: you just [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"link-it-as-you-go-along\",\n    \"title\": \"Link It as You Go Along\"\n  }), \"link it as you go along\"), \"], then the link either works (because someone wrote that node/article/resource already) or you can click through and backfill it. I call this procedure link-driven writing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Whenever there is more than one \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/node\",\n    \"title\": \"node\"\n  }), \"[[node]]\"), \" with a given wikilink in an Agora (typical use case: notes kept on a certain topic by different users), the Agora will surface all of them when resolving the wikilink in question. Example: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/README\",\n    \"title\": \"README\"\n  }), \"[[README]]\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2c449f93-71f3-5ff0-9feb-2d4abd86fb5a","fields":{"slug":"/garden/flancian/wikilink","title":"Wikilink"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"agora\"\n  }, \"Agora\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An Agora is, in its most basic form, a set of conventions. Users that follow the convention associated with an Agora are said to be \", mdx(\"em\", {\n    parentName: \"li\"\n  }, \"in\"), \" the Agora.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Useful conventions are made explicit in an Agora's \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/CONTRACT\",\n    \"title\": \"CONTRACT\"\n  }), \"[[CONTRACT]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"An Agora is built around a distributed knowledge graph maintained by its users.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In Flancia, of course, there is an Agora: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://flancia.org/agora\"\n  }), \"https://flancia.org/agora\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"320eee39-57b4-59f7-bb12-5be46322047b","fields":{"slug":"/garden/flancian/agora","title":"Agora"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"flancians-digital-garden\"\n  }, \"Flancian's digital garden\"), mdx(\"p\", null, \"Welcome to my \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://joelhooks.com/digital-garden\"\n  }), \"digital garden\"), \"!\"), mdx(\"p\", null, \"This garden is part of the \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://flancia.org/go/agora\"\n  }), \"Agora\"), \" and can be found rendered in \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://anagora.org/\"\n  }), \"https://anagora.org/\"), \". If you're viewing this on Github, you will have a suboptimal experience (many links will be broken).\"), mdx(\"p\", null, \"If you'd like help setting up a digital garden like this one for yourself, please reach out to me on Twitter: \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://twitter.com/flancian\"\n  }), \"https://twitter.com/flancian\"), \".\"), mdx(\"p\", null, \"For more information about my projects, please refer to \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://flancia.org\"\n  }), \"https://flancia.org\"), \".\"), mdx(\"h1\", {\n    \"id\": \"navigating-this-garden\"\n  }, \"Navigating this garden\"), mdx(\"p\", null, \"Please use the search function on the top right, or begin by browsing one of the following popular nodes:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"person\",\n    \"title\": \"Person\"\n  }), \"person\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"twitter\",\n    \"title\": \"Twitter\"\n  }), \"twitter\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"todo\",\n    \"title\": \"Todo\"\n  }), \"todo\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"06799bf9-1b59-5ab7-8278-40590962311b","fields":{"slug":"/garden/flancian/README","title":"Flancian's digital garden"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wikilink\"\n  }, \"Wikilink\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A wikilink looks like this: [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"wikilink\",\n    \"title\": \"Wikilink\"\n  }), \"wikilink\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks are the heart of the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"agora\",\n    \"title\": \"Agora\"\n  }), \"Agora\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks come, wait for it, from wikis :) You can think of the Agora as a sort of distributed wiki, although users in this wiki contribute individual contributions instead of community pages (for now). \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks are great because they allow for very easy linking: you just [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"link-it-as-you-go-along\",\n    \"title\": \"Link It as You Go Along\"\n  }), \"link it as you go along\"), \"], then the link either works (because someone wrote that node/article/resource already) or you can click through and backfill it. I call this procedure link-driven writing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Whenever there is more than one \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/node\",\n    \"title\": \"node\"\n  }), \"[[node]]\"), \" with a given wikilink in an Agora (typical use case: notes kept on a certain topic by different users), the Agora will surface all of them when resolving the wikilink in question. Example: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/README\",\n    \"title\": \"README\"\n  }), \"[[README]]\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2c449f93-71f3-5ff0-9feb-2d4abd86fb5a","fields":{"slug":"/garden/flancian/wikilink","title":"Wikilink"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"link-it-as-you-go-along\"\n  }, \"Link It as You Go Along\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Just \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/link-it\",\n    \"title\": \"link it\"\n  }), \"[[link it]]\"), \" as you're writing, even if the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"wikilink\",\n    \"title\": \"Wikilink\"\n  }), \"wikilink\"), \"] doesn't exist yet. It can be made to exist later, either by you or someone else.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"1c974c92-3319-55d0-afcb-54084ae0c2f8","fields":{"slug":"/garden/flancian/link-it-as-you-go-along","title":"Link It as You Go Along"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2020-11-02\"\n  }, \"2020-11-02\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Spoke to [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../ding-levery\",\n    \"title\": \"Ding Levery\"\n  }), \"ding-levery\"), \"], [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../abstractfairy\",\n    \"title\": \"AbstractFairy\"\n  }), \"abstractfairy\"), \"] about how the Agora could work.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ding is interested in [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../agora-protocol\",\n    \"title\": \"Agora Protocol\"\n  }), \"agora-protocol\"), \"], [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../twitter\",\n    \"title\": \"Twitter\"\n  }), \"twitter\"), \"] integration.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../abstractfairy\",\n    \"title\": \"AbstractFairy\"\n  }), \"abstractfairy\"), \"] is interested in \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/ranking\",\n    \"title\": \"ranking\"\n  }), \"[[ranking]]\"), \", \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/tags\",\n    \"title\": \"tags\"\n  }), \"[[tags]]\"), \", \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/graphing\",\n    \"title\": \"graphing\"\n  }), \"[[graphing]]\"), \".\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wrote \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/agora-help\",\n    \"title\": \"agora-help\"\n  }), \"[[agora-help]]\"), \", [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../foo\",\n    \"title\": \"Foo\"\n  }), \"foo\"), \"], [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../wikilink\",\n    \"title\": \"Wikilink\"\n  }), \"wikilink\"), \"] as they're featured as examples in the Agora.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Today:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implement search (full text).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implement backlinks (of course).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make the index be just another note [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../ding-levery\",\n    \"title\": \"Ding Levery\"\n  }), \"ding-levery\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Move uwsgi/prod serving off my user into 'agora'.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Help [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../s5bug\",\n    \"title\": \"S5bug\"\n  }), \"s5bug\"), \"] and [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../jonathan-the-utopian\",\n    \"title\": \"Jonathan the Utopian\"\n  }), \"jonathan-the-utopian\"), \"] integrate.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add logo.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Define special (nodal?) pages. Are there akkny?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"README is already one, it seems.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Journal entries.\")))))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"d83cdacd-4517-5fe3-8821-cac51fff494e","fields":{"slug":"/garden/flancian/journal/2020-11-02","title":"2020-11-02"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"2020-11-01\"\n  }, \"2020-11-01\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Day's todo:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Do laundry\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Talk to family over VC\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../ding-levery\",\n    \"title\": \"Ding Levery\"\n  }), \"ding-levery\"), \"] told me about [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../roam-to-git\",\n    \"title\": \"Roam to Git\"\n  }), \"roam-to-git\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../logseq\",\n    \"title\": \"Logseq\"\n  }), \"logseq\"), \"] told me about [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../force-graph\",\n    \"title\": \"Force Graph\"\n  }), \"force-graph\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Met [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../kanjun\",\n    \"title\": \"Kanjun\"\n  }), \"kanjun\"), \"] on [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../twitter\",\n    \"title\": \"Twitter\"\n  }), \"twitter\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Worked on the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../agora\",\n    \"title\": \"Agora\"\n  }), \"agora\"), \"] for a few hours and it was lots of fun: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://flancia.org/go/agora\"\n  }), \"https://flancia.org/go/agora\"), \" has the changelog. Got several things working:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Listing notes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Finding (multiple) notes by \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/wikilink\",\n    \"title\": \"wikilink\"\n  }), \"[[wikilink]]\"), \".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rendering notes (Markdown).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Auto-linkification (which Foam does for you).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://anagora.org\"\n  }), \"https://anagora.org\"), \" has this code live now.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tomorrow:\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implement search (full text).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Implement backlinks (of course).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make the index be just another note [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../ding-levery\",\n    \"title\": \"Ding Levery\"\n  }), \"ding-levery\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Help [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../s5bug\",\n    \"title\": \"S5bug\"\n  }), \"s5bug\"), \"] and [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"../jonathan-the-utopian\",\n    \"title\": \"Jonathan the Utopian\"\n  }), \"jonathan-the-utopian\"), \"] integrate.\")))));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"79efe1ea-56c6-5ea5-a00a-a581d557994b","fields":{"slug":"/garden/flancian/journal/2020-11-01","title":"2020-11-01"}}}]},"fields":{"slug":"/garden/flancian/wikilink","title":"Wikilink"}}},"pageContext":{"id":"2c449f93-71f3-5ff0-9feb-2d4abd86fb5a"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}