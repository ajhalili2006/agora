{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/flancian/link-it-as-you-go-along","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"link-it-as-you-go-along\"\n  }, \"Link It as You Go Along\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Just \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/link-it\",\n    \"title\": \"link it\"\n  }), \"[[link it]]\"), \" as you're writing, even if the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"wikilink\",\n    \"title\": \"Wikilink\"\n  }), \"wikilink\"), \"] doesn't exist yet. It can be made to exist later, either by you or someone else.\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"wikilink\"\n  }, \"Wikilink\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A wikilink looks like this: [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"wikilink\",\n    \"title\": \"Wikilink\"\n  }), \"wikilink\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks are the heart of the [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"agora\",\n    \"title\": \"Agora\"\n  }), \"Agora\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks come, wait for it, from wikis :) You can think of the Agora as a sort of distributed wiki, although users in this wiki contribute individual contributions instead of community pages (for now). \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Wikilinks are great because they allow for very easy linking: you just [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"link-it-as-you-go-along\",\n    \"title\": \"Link It as You Go Along\"\n  }), \"link it as you go along\"), \"], then the link either works (because someone wrote that node/article/resource already) or you can click through and backfill it. I call this procedure link-driven writing.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Whenever there is more than one \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/node\",\n    \"title\": \"node\"\n  }), \"[[node]]\"), \" with a given wikilink in an Agora (typical use case: notes kept on a certain topic by different users), the Agora will surface all of them when resolving the wikilink in question. Example: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"/README\",\n    \"title\": \"README\"\n  }), \"[[README]]\"), \".\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2c449f93-71f3-5ff0-9feb-2d4abd86fb5a","fields":{"slug":"/garden/flancian/wikilink","title":"Wikilink"}}}],"inboundReferences":[]},"fields":{"slug":"/garden/flancian/link-it-as-you-go-along","title":"Link It as You Go Along"}}},"pageContext":{"id":"1c974c92-3319-55d0-afcb-54084ae0c2f8"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}