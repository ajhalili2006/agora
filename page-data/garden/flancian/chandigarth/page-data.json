{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/flancian/chandigarth","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"chandigarth\"\n  }, \"Chandigarth\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Chandigarh\"\n  }), \"https://en.wikipedia.org/wiki/Chandigarh\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A planned city, like [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"brasilia\",\n    \"title\": \"Brasilia\"\n  }), \"Brasilia\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It was one of the early\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Planned_cities\"\n  }), \"planned cities\"), \"\\xA0in post-independence India and is internationally known for its architecture and urban design.\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Chandigarh#cite_note-ci2-10\"\n  }), \"[9]\"), \"\\xA0The master plan of the city was prepared by Swiss-French architect\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Le_Corbusier\"\n  }), \"Le Corbusier\"), \", which transformed from earlier plans created by the Polish architect\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Maciej_Nowicki_(architect)\"\n  }), \"Maciej Nowicki\"), \"\\xA0and the American planner\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Albert_Mayer_(planner)\"\n  }), \"Albert Mayer\"), \". Most of the government buildings and housing in the city were designed by the Chandigarh Capital Project Team headed by\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Le_Corbusier\"\n  }), \"Le Corbusier\"), \",\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Jane_Drew\"\n  }), \"Jane Drew\"), \"\\xA0and\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Maxwell_Fry\"\n  }), \"Maxwell Fry\"), \". In 2015, an article published by\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/BBC\"\n  }), \"BBC\"), \"\\xA0named Chandigarh as one of the few master-planned cities in the world to have succeeded in terms of combining monumental architecture, cultural growth, and modernization.\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Chandigarh#cite_note-11\"\n  }), \"[10]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"brasilia\"\n  }, \"Brasilia\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A planned city.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"c9540e64-3754-5c2a-bacc-79a5f23e54ba","fields":{"slug":"/garden/flancian/brasilia","title":"Brasilia"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"seeing-like-a-state\"\n  }, \"Seeing Like a State\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, mdx(\"strong\", {\n    parentName: \"strong\"\n  }, \"Seeing Like a State: How Certain Schemes to Improve the Human Condition Have Failed\")), \"\\xA0is a book by\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/James_C._Scott\"\n  }), \"James C. Scott\"), \"\\xA0critical of a system of beliefs he calls\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/High_modernism\"\n  }), \"high modernism\"), \", that centers around confidence in the ability to design and operate society in accordance with\\xA0\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Scientific_laws\"\n  }), \"scientific laws\"), \".\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Seeing_Like_a_State#cite_note-1\"\n  }), \"[1]\"), mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://en.wikipedia.org/wiki/Seeing_Like_a_State#cite_note-nyt-review-2\"\n  }), \"[2]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://twitter.com/flancian/status/1279479233316827136\"\n  }), \"https://twitter.com/flancian/status/1279479233316827136\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Introduction\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"p1 This book grew out of an intellectual detour that became so gripping that I decided to abandon my original itinerary altogether.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Originally set out to \\\"understand why the state has always seemed to be the enemy of \\\"people who move around\\\", to put it crudely.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gypsies, berbers, bedouins, vagrants, homeless, serfs \\\"have always been a thorn in the side of states\\\".\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Efforts to permanently settle these mobile people are perennial and seldom succeed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"p2 on many of these schemes: \\\"the state's attempt to make a society legible, to arrange the population in ways that simplified the classic state functions of taxation, conscription and prevention of rebellion\\\". Creation of grids.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Beekeeping as an analogy. Industrial hives are made regular, segregated.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"p3 [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"chandigarth\",\n    \"title\": \"Chandigarth\"\n  }), \"Chandigarth\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }), mdx(\"li\", {\n    parentName: \"ul\"\n  }))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chapter one\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"On forestry as a model for the analysis of schemes that it proposes.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"0215ef59-e29e-59d5-86f2-2e6774a5f954","fields":{"slug":"/garden/flancian/seeing-like-a-state","title":"Seeing Like a State"}}}]},"fields":{"slug":"/garden/flancian/chandigarth","title":"Chandigarth"}}},"pageContext":{"id":"e1fe7ae9-d38a-5137-b125-fd3cf70ef1fd"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}