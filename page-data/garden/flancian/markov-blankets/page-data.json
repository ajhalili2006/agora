{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/flancian/markov-blankets","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"markov-blankets\"\n  }, \"Markov Blankets\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"a\", {\n    \"href\": \"https://royalsocietypublishing.org/doi/10.1098/rsif.2017.0792\",\n    \"parentName\": \"li\"\n  }, \"https://royalsocietypublishing.org/doi/10.1098/rsif.2017.0792\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"In\\xA0\", mdx(\"a\", {\n    \"href\": \"https://en.wikipedia.org/wiki/Statistics\",\n    \"parentName\": \"li\"\n  }, \"statistics\"), \"\\xA0and\\xA0\", mdx(\"a\", {\n    \"href\": \"https://en.wikipedia.org/wiki/Machine_learning\",\n    \"parentName\": \"li\"\n  }, \"machine learning\"), \", the\\xA0\", mdx(\"strong\", {\n    \"parentName\": \"li\"\n  }, \"Markov blanket\"), \"\\xA0for a\\xA0\", mdx(\"a\", {\n    \"href\": \"https://en.wikipedia.org/wiki/Vertex_(graph_theory)\",\n    \"parentName\": \"li\"\n  }, \"node\"), \"\\xA0in a\\xA0\", mdx(\"a\", {\n    \"href\": \"https://en.wikipedia.org/wiki/Graphical_model\",\n    \"parentName\": \"li\"\n  }, \"graphical model\"), \"\\xA0contains all the variables that shield the node from the rest of the network. This means that the Markov blanket of a node is the only knowledge needed to predict the behavior of that node and its children. The term was coined by\\xA0\", mdx(\"a\", {\n    \"href\": \"https://en.wikipedia.org/wiki/Judea_Pearl\",\n    \"parentName\": \"li\"\n  }, \"Judea Pearl\"), \"\\xA0in 1988.\", mdx(\"a\", {\n    \"href\": \"https://en.wikipedia.org/wiki/Markov_blanket#cite_note-1\",\n    \"parentName\": \"li\"\n  }, \"[1]\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"neuroyogacara\"\n  }, \"Neuroyogacara\"), mdx(\"ul\", null, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"a\", {\n    \"href\": \"https://twitter.com/NeuroYogacara/status/1257403642161790983/photo/2\",\n    \"parentName\": \"li\"\n  }, \"https://twitter.com/NeuroYogacara/status/1257403642161790983/photo/2\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Introduced me to Shantideva, Asanga.\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Also to Ward! \", mdx(\"a\", {\n    \"href\": \"https://libcom.org/files/Ward_-_Anarchy_in_Action_3.pdf\",\n    \"parentName\": \"li\"\n  }, \"https://libcom.org/files/Ward_-_Anarchy_in_Action_3.pdf\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"On [\", mdx(\"a\", {\n    \"href\": \"markov-blankets\",\n    \"title\": \"Markov Blankets\",\n    \"parentName\": \"li\"\n  }, \"Markov Blankets\"), \"]: \", mdx(\"a\", {\n    \"href\": \"https://twitter.com/NeuroYogacara/status/1279820976629432320\",\n    \"parentName\": \"li\"\n  }, \"https://twitter.com/NeuroYogacara/status/1279820976629432320\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"b50b7180-cc2f-59d2-bd24-5aba8c555435","fields":{"slug":"/garden/flancian/neuroyogacara","title":"Neuroyogacara"}}}]},"fields":{"slug":"/garden/flancian/markov-blankets","title":"Markov Blankets"}}},"pageContext":{"id":"8568df23-57ea-5756-8e0a-c6a4ad4c359d"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}