{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/flancian/shu-omi","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"shu-omi\"\n  }, \"Shu Omi\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"zettelkasten\"\n  }, \"Zettelkasten\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=rOSZOCoqOo8\"\n  }), \"https://www.youtube.com/watch?v=rOSZOCoqOo8\"), \" by [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"shu-omi\",\n    \"title\": \"Shu Omi\"\n  }), \"Shu Omi\"), \"].\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"In [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"roam\",\n    \"title\": \"Roam\"\n  }), \"Roam\"), \"]: \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://www.youtube.com/watch?v=ljyo_WAJevQ\"\n  }), \"https://www.youtube.com/watch?v=ljyo_WAJevQ\")), mdx(\"li\", _extends({\n    parentName: \"ul\"\n  }, {\n    \"className\": \"task-list-item\"\n  }), mdx(\"input\", _extends({\n    parentName: \"li\"\n  }, {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true\n  })), \" \", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://blog.viktomas.com/posts/slip-box/\"\n  }), \"https://blog.viktomas.com/posts/slip-box/\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Steps\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Take [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"literature\",\n    \"title\": \"Literature\"\n  }), \"literature\"), \"] notes. Information I don't want to forget or think I can use later. Ideally no copy/paste.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Take [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"bibliographical\",\n    \"title\": \"Bibliographical\"\n  }), \"bibliographical\"), \"] notes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Make [\", mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"permanent\",\n    \"title\": \"Permanent\"\n  }), \"permanent\"), \"] notes. Go over notes in previous notes and think about how they relate to my thinking, research, interest. Find meaninful connections. This builds a web of knowledge.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Find keywords: think about \\\"when will this be useful\\\", \\\"when and how will I use this idea\\\". Ideally they relate to topics I'm working on.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Take fleeting notes: this is just an idea log.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"7f3c93d1-6de7-58bf-8ae3-51f1b529f4fe","fields":{"slug":"/garden/flancian/zettelkasten","title":"Zettelkasten"}}}]},"fields":{"slug":"/garden/flancian/shu-omi","title":"Shu Omi"}}},"pageContext":{"id":"6bb666c8-6ade-5b3f-86dd-8bbab6346780"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}