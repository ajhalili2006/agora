{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/garden/flancian/sparql","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"sparql\"\n  }, \"SPARQL\"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"rdf\"\n  }, \"RDF\"), mdx(\"ul\", {\n    \"className\": \"contains-task-list\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, mdx(\"a\", {\n    \"href\": \"https://en.wikipedia.org/wiki/Resource_Description_Framework\",\n    \"parentName\": \"li\"\n  }, \"https://en.wikipedia.org/wiki/Resource_Description_Framework\")), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Could be relevant for [\", mdx(\"a\", {\n    \"href\": \"go-links\",\n    \"title\": \"Go Links\",\n    \"parentName\": \"li\"\n  }, \"Go Links\"), \"] and the [\", mdx(\"a\", {\n    \"href\": \"agora\",\n    \"title\": \"Agora\",\n    \"parentName\": \"li\"\n  }, \"Agora\"), \"].\"), mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"[\", mdx(\"a\", {\n    \"href\": \"zorngerhard\",\n    \"title\": \"ZornGerhard\",\n    \"parentName\": \"li\"\n  }, \"ZornGerhard\"), \"] knows about it.\", mdx(\"ul\", {\n    \"parentName\": \"li\"\n  }, mdx(\"li\", {\n    \"parentName\": \"ul\"\n  }, \"Also mentioned the [\", mdx(\"a\", {\n    \"href\": \"sparql\",\n    \"title\": \"SPARQL\",\n    \"parentName\": \"li\"\n  }, \"SPARQL\"), \"] query language: \", mdx(\"a\", {\n    \"href\": \"https://twitter.com/ZornGerhard/status/1310645329587560448\",\n    \"parentName\": \"li\"\n  }, \"https://twitter.com/ZornGerhard/status/1310645329587560448\")))), mdx(\"li\", {\n    \"className\": \"task-list-item\",\n    \"parentName\": \"ul\"\n  }, mdx(\"input\", {\n    \"type\": \"checkbox\",\n    \"checked\": false,\n    \"disabled\": true,\n    \"parentName\": \"li\"\n  }), \" \", \"Ask \", mdx(\"a\", {\n    \"href\": \"/s.-s.\",\n    \"title\": \"s.-s.\",\n    \"parentName\": \"li\"\n  }, \"[[s.-s.]]\"), \" about this.\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"14bfda15-3f1d-570d-ac05-2a77b1e76c49","fields":{"slug":"/garden/flancian/rdf","title":"RDF"}}}]},"fields":{"slug":"/garden/flancian/sparql","title":"SPARQL"}}},"pageContext":{"id":"1d0fa05b-1637-59b3-811b-38e4f5582ace"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}